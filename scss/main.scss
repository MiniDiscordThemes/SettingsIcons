@use "./data";
@use "./property";

// Property for each settings tab
@each $id, $nospace in data.$pairs {
    @include property.create($nospace);
}
// Fallback
@include property.create("default");

@property --settingsicons {
    syntax: "show | hide";
    inherits: false;
    initial-value: show;
}
@property --si-size {
    syntax: "<length>";
    inherits: true;
    initial-value: 18px;
}
@property --si-gap {
    syntax: "<length>";
    inherits: true;
    initial-value: 14px;
}

:root {
    container: root;
}

@container root style(--settingsicons: show) {
    .sidebarRegion__36437 {
        flex-basis: calc(218px + var(--si-size) + var(--si-gap)) !important;
    }

    // User settings
    .sidebar__02e8d {
        width: calc(218px + var(--si-size) + var(--si-gap)) !important;

        :is(
                .item__48dda .icon_c69952,
                .premiumLabel__68f78 > svg,
                .premiumLabel__68f78 img,
                .tabBarItemContainer__5d798 > svg,
                .tabBarItemContainer__5d798 img
            ) {
            display: none;
        }

        // Settings tab
        .side_b4b3f6 .item__48dda {
            display: flex;
            align-items: center;

            &::before {
                content: "";
                flex: 0 0 auto;
                width: var(--si-size);
                height: var(--si-size);
                margin-right: calc(var(--si-size) / 2);
                background: currentColor;
                z-index: 2;
                mask: var(--si-default) center/contain no-repeat;
            }

            @each $id, $nospace in data.$pairs {
                &[data-tab-id="#{$id}"]::before {
                    mask: var(--si-#{$nospace}) center/contain no-repeat;
                }
            }

            > div {
                flex: 1 1 auto;
            }
        }
    }
}
